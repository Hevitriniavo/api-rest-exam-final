openapi: "3.0.2"
info:
  title: Digital Bank API
  version: "1.0"
  description: API for managing banking operations for a digital bank. STD22036 & STD22047 & STD22086
servers:
  - url: http://localhost:8080

tags:
  - name: Banks
  - name: Categories
  - name: Accounts
  - name: Transactions
  - name: Transaction_histories
  - name: Transfers
  - name: Interests
  - name: Balance

paths:
  /banks:
    get:
      tags:
        - Banks
      summary: Retrieve list of banks
      description: Retrieve a list of all banks in the wallet app, optionally filtered by bank.
      operationId: getBanks
      responses:
        '200':
          description: List of banks retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bank'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: bank not found
        '500':
          description: Internal server error

    post:
      tags:
        - Banks
      summary: Create a new bank
      operationId: createOrUpdateBank
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank'
      responses:
        '200':
          description: Bank created successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bank'
        '400':
          description: Bad request
        '500':
          description: Internal server error
    

  /banks/{id}:
    get:
      tags:
        - Banks
      summary: Retrieve one of banks by id
      description: Retrieve only one of all banks in the wallet app, optionally filtered by bank.
      operationId: getBank
      parameters:
        - name: id 
          in: path
          description: The id that needs to be retrieved
          required: true
          schema:
            type: string
      responses:
        '200':
          description: id of banks retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bank'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: bank not found
        '500':
          description: Internal server error
      
    
    delete:
      tags:
        - Banks
      summary: Delete a bank by id
      description: You can only delete one bank using the ID
      operationId: destroyBank
      parameters:
        - name: id 
          in: path
          description: The id that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete bank successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bank'
        '404':
          description: bank not found
        '500':
          description: Internal server error
        
    
    # the end of the path bank

    # begins the path account

  /accounts:
    get:
      tags:
        - Accounts
      summary: Retrieve list of accounts
      description: Retrieve a list of all accounts in the wallet app, optionally filtered by account.
      operationId: getAccounts
      responses:
        '200':
          description: List of accounts retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Account not found
        '500':
          description: Internal server error
  
  /accounts/create:
    post:
      tags:
        - Accounts
      summary: Create a new account
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Account created successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  
  /accounts/update:
    put:
      tags:
        - Accounts
      summary: Update accounts
      description: edit account items.
      operationId: updateAccount
      parameters:
        - name: id 
          in: path
          description: Id that needs to be update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: modification successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: Invalid account supplied
        '404':
          description: account not found
        '500': 
          description:  Internal server error

  /accounts/{accountId}/overdraft:
    put:
      tags:
        - Accounts
      summary: ask for a debt
      description: edit account items.
      operationId: toggleOverdraft
      parameters:
        - name: accountId
          in: path
          description: Id that needs to be update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: request received
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "thanks for borrowing the balance"
                  properties: false
        '404':
          description: accountId not found
        '403': 
          description: Forbidden

  /accounts/{id}:
    get:
      tags:
        - Accounts
      summary: Retrieve one of accounts by id
      description: Retrieve only one of all accounts in the wallet app, optionally filtered by account.
      operationId: getAccount
      parameters:
        - name: id 
          in: path
          description: The id that needs to be retrieved
          required: true
          schema:
            type: string
      responses:
        '200':
          description: One of accounts retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: Invalid id supplied
        '404':
          description: Account not found
       
    delete:
      tags:
        - Accounts
      summary: Delete a account by id
      description: You can only delete one account using the ID
      operationId: destroyAccount
      parameters:
        - name: id 
          in: path
          description: The id that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete account successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: Invalid id supplied
        '404':
          description: Account not found
       

     # the end of the path account

    # begins the path transaction
  /transactions/credit:
    post:
      tags:
        - Transactions
      summary: Create a new credit
      operationId: credit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description:  our credit successfully.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "thanks you for credit"
                  properties: false
        '400':
          description: Bad Request
        '500':
          description: Internal server error
                

  /transactions/debit:
    post:
      tags:
        - Transactions
      summary: Create a new debit
      operationId: debit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description:  our debit successfully.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "thanks you for debit"
                  properties: false
        '400':
          description: Bad Request
        '500':
          description: Internal server error       

  
     # the end of the path transaction

    # begins the path balance

  /balance/{accountId}:
    get:
      tags:
        - Balance
      summary: Retrieve one of balance by id
      description: Retrieve only one of all balances in the wallet app, optionally filtered by balance.
      operationId: getConsultBalance
      parameters:
        - name: accountId
          in: path
          description: The id that needs to be retrieved
          required: true
          schema:
            type: string
      responses:
        '200':
          description: id of balance retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Balance'
        '400':
          description: Bad Request
        '404':
          description: balance not found
        '500':
          description: Internal server error

components:
  schemas:
    Bank:
      type: object
      properties:
        name:
          type: string
          description: The name of the bank.
        address:
          type: string
          description: The address of the bank.
        phone:
          type: string
          description: The phone number of the bank.
        email:
          type: string
          format: email
          description: The email address of the bank.
    Category:
      type: object
      properties:
        name:
          type: string
          description: The name of the category.
        type:
          type: string
          description: The type of the category (ENTREE or SORTIE).
          enum:
            - ENTREE
            - SORTIE
    Account:
      type: object
      properties:
        password:
          type: string
          description: The password of the account.
        last_name:
          type: string
          description: The last name of the account holder.
        first_name:
          type: string
          description: The first name of the account holder.
        email:
          type: string
          format: email
          description: The email address of the account holder.
        birthday:
          type: string
          format: date
          description: The birthday of the account holder.
        balance:
          type: number
          format: float
          description: The balance of the account.
        net_Monthly_salary:
          type: number
          format: float
          description: The net monthly salary of the account holder.
        
       
    Transaction:
      type: object
      properties:
        account_id:
          allOf:
            - $ref: "#/components/schemas/Account"
          description: The ID of the account associated with the transaction.
        amount:
          type: number
          format: float
          description: The amount of the transaction.
        reason:
          type: string
          description: The reason for the transaction.
        effective_date:
          type: string
          format: date
          description: The effective date of the transaction.
        transaction_type:
          type: string
          description: The type of the transaction.
        category_id:
          allOf:
            - $ref: "#/components/schemas/Category"
          description: The ID of the category associated with the transaction.
        comment:
          type: string
          description: Additional comment for the transaction.
    TransactionHistory:
      type: object
      properties:
        transaction_id:
          allOf:
            - $ref: "#/components/schemas/Transaction"
          description: The ID of the transaction associated with the history.
        operation_date:
          type: string
          format: date-time
          description: The operation date of the transaction history.
    Transfer:
      type: object
      properties:
        sender_account_id:
          allOf:
            - $ref: "#/components/schemas/Account"
          description: The ID of the sender account.
        receiver_account_id:
          allOf:
            - $ref: "#/components/schemas/Account"
          description: The ID of the receiver account.
        amount:
          type: number
          format: float
          description: The amount of the transfer.
        reason:
          type: string
          description: The reason for the transfer.
        effective_date:
          type: string
          format: date-time
          description: The effective date of the transfer.
        registration_date:
          type: string
          format: date-time
          description: The registration date of the transfer.
        status:
          type: string
          description: The status of the transfer.
        reference:
          type: string
          description: The reference of the transfer.
        cancelled_date:
          type: string
          format: date-time
          description: The cancelled date of the transfer.
    Interest:
      type: object
      properties:
        account_id:
          allOf:
            - $ref: "#/components/schemas/Account"
          description: The ID of the account associated with the interest.
        amount:
          type: number
          format: float
          description: The amount of the interest.
        interest_rate:
          type: number
          format: float
          description: The interest rate.
        interest_date:
          type: string
          format: date
          description: The date of the interest.

    Balance:
      type: object
      properties:
        principalBalance:
          type: number
          format: double
        loans:
          type: number
          format: double
        loanInterests:
          type: number
          format: double

  