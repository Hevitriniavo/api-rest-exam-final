openapi: "3.0.2"
info:
  title: Digital Bank API
  version: "1.0"
  description: API for managing banking operations for a digital bank. STD22036 & STD22047 & STD22086
servers:
  - url: http://localhost:8080

tags:
  - name: Banks
  - name: Categories
  - name: Accounts
  - name: BankSolds
  - name: HistoryBankSolds
  - name: Transactions
  - name: TransactionsHistories
  - name: Transfers
  - name: InterestValid
  - name: istoryInterests
  - name: InterestNotValid
  - name: LoanValid
  - name: HistoryLoans
  - name: LoanNotValid

paths:
  /banks:
    get:
      tags:
        - Banks
      summary: Retrieve list of banks
      description: Retrieve a list of all banks in the wallet app, optionally filtered by bank.
      operationId: getBanks
      responses:
        '200':
          description: List of banks retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bank'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: bank not found
        '500':
          description: Internal server error

  /banks/paginate:
    get:
      tags:
        - Banks
      summary: Retrieve one of banks by Paginated
      description: Retrieve only one paginated of all banks in the wallet app, optionally filtered by bank.
      operationId: getBanksPaginated
      parameters:
        - name: Banks paginated
          in: path
          description: The banks paginated that needs to be retrieved
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Banks paginated of banks retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bank'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Banks paginatednot found
        '500':
          description: Internal server error
  
  /banks/create:
    post:
      tags:
        - Banks
      summary: Create a new bank
      operationId: createBank
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank'
      responses:
        '200':
          description: Bank created successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bank'
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /banks/update:
    put:
      tags:
        - Banks
      summary: Update an existing banks
      description: edit an existing bank by id.
      operationId: updateBank
      requestBody:
        description: Update an existent bank
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bank'
        required: true
      responses:
        '200':
          description: modification successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bank'
        '400':
          description: Bad request
        '403':
          description: Invalid bank supplied
        '404':
          description: bank not found
        '500': 
          description:  Internal server error

  /banks/{id}:
    get:
      tags:
        - Banks
      summary: Retrieve one of banks by id
      description: Retrieve only one of all banks in the wallet app, optionally filtered by bank.
      operationId: getBankById
      parameters:
        - name: id 
          in: path
          description: The id that needs to be retrieved
          required: true
          schema:
            type: string
      responses:
        '200':
          description: id of banks retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bank'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: bank not found
        '500':
          description: Internal server error


    delete:
      tags:
        - Banks
      summary: Delete a bank by id
      description: You can only delete one bank using the ID
      operationId: deleteBank
      parameters:
        - name: id 
          in: path
          description: The id that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete bank successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bank'
        '404':
          description: bank not found
        '500':
          description: Internal server error

    # the end of the path bank

    # begins the path account

  /accounts:
    get:
      tags:
        - Accounts
      summary: Retrieve list of accounts
      description: Retrieve a list of all accounts in the wallet app, optionally filtered by bank.
      operationId: getAccounts
      responses:
        '200':
          description: List of accounts retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Account not found
        '500':
          description: Internal server error

  /accounts/paginate:
    get:
      tags:
        - Accounts
      summary: Retrieve one of account by Paginated
      description: Retrieve only one paginated of all accounts in the wallet app, optionally filtered by account.
      operationId: getAccountsPaginated
      parameters:
        - name: Account paginated
          in: path
          description: The account paginated that needs to be retrieved
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account paginated of accounts retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Account paginatednot found
        '500':
          description: Internal server error

  /accounts/create: 
    post:
      tags:
        - Accounts
      summary: Create a new account
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Account created successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /accounts/login: 
    post:
      tags:
        - Accounts
      summary: Create login
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: login created successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /accounts/update:
    put:
      tags:
        - Accounts
      summary: Update an existing account
      description: edit an existing account by id.
      operationId: updateAccount
      requestBody:
        description: Update an existent account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        '200':
          description: modification successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: Bad request
        '403':
          description: Invalid account supplied
        '404':
          description: account not found
        '500': 
          description:  Internal server error

  /accounts/{id}:
    get:
      tags:
        - Accounts
      summary: Retrieve one of accounts by id
      description: Retrieve only one of all accounts in the wallet app, optionally filtered by account
      operationId: getAccountById
      parameters:
        - name: id 
          in: path
          description: The id that needs to be retrieved
          required: true
          schema:
            type: string
      responses:
        '200':
          description: id of account retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: account not found
        '500':
          description: Internal server error

    delete:
      tags:
        - Accounts
      summary: Delete a account by id
      description: You can only delete one account using the ID
      operationId: deleteAccount
      parameters:
        - name: id 
          in: path
          description: The id that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete account successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '404':
          description: bank not found
        '500':
          description: Internal server error

  # the end of the path account

    # begins the path transaction

  /transactions/account/{accountId}:
    get:
      tags:
        - Transactions
      summary: Retrieve list of transactions by accountId
      description: Retrieve one of transaction  in the wallet app, optionally filtered by transaction.
      operationId: getTransactionsByAccountId
      parameters:
        - name: accountId 
          in: path
          description: The accountId that needs to be retrieved
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of transactions retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Account not found
        '500':
          description: Internal server error
  
  /transactions/account/{accountId}/paginate:
    get:
      tags:
        - Transactions
      summary: Retrieve list of transactions by accountId paginated
      description: Retrieve one transaction by accountId paginated in the wallet app, optionally filtered by transaction.
      operationId: getPaginatedTransactionsByAccountId
      parameters:
        - name: accountId paginated 
          in: path
          description: The accountId paginated that needs to be retrieved
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of transactions accountId paginated retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad request
        '403':
          description: Forbidden
        '404':
          description: Account not found
        '500':
          description: Internal server error

  
  # the end of the path transaction

    # begins the path transfer
    
  /transfer:
    post:
      tags:
        - Transfers
      summary: New transfer
      operationId: createBank
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transfer'
      responses:
        '200':
          description: New transfer successfully.
          content:
            application/json:
              schema:
                type: object
                example: 
                  message: New transfer successfully.
                  properties: false
                
        '400':
          description: Bad request
        '500':
          description: Internal server error

components:
  schemas:
    Bank:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the bank.
        name:
          type: string
          description: The name of the bank.
        code:
          type: string
          description: The bank's code.
        email:
          type: string
          format: email
          description: The email address of the bank.

    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the category.
        name:
          type: string
          description: The name of the category.
        type:
          type: string
          enum:
            - INCOME
            - EXPENSE
          description: The type of category, whether it's income or expense.

    BankSold:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the bank balance.
        value:
          type: number
          format: float
          description: The value of the bank balance.

    HistoryBankSold:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the bank balance history.
        value:
          type: number
          format: float
          description: The value of the bank balance.
        bankSoldDate:
          type: string
          format: date
          description: The date of the bank balance.

    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the account.
        password:
          type: string
          description: The password of the account.
        lastName:
          type: string
          description: The last name of the account holder.
        firstName:
          type: string
          description: The first name of the account holder.
        email:
          type: string
          format: email
          description: The email address of the account holder.
        birthday:
          type: string
          format: date
          description: The birthday of the account holder.
        balance:
          type: number
          format: float
          description: The current balance of the account.
        netMonthlySalary:
          type: number
          format: float
          description: The net monthly salary of the account holder.
        accountNumber:
          type: string
          description: The account number.
        overdraftEnabled:
          type: boolean
          description: Indicates if overdraft is enabled for the account.
        overdraftLimit:
          type: number
          format: float
          description: Indicates if overdraft is limit for the account.
        creationDate:
          type: string
          format: date
          description: The date when the account was created.
        lastWithdrawalDate:
          type: string
          format: date
          description: The date of the last withdrawal.
        bank_sold_id:
          type: integer
          format: int64
          description: The bank sold associated with the account.

    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the transaction.
        accountId:
          type: integer
          format: int64
          description: The account associated with the transaction.
        amount:
          type: number
          format: float
          description: The amount of the transaction.
        reason:
          type: string
          description: The reason for the transaction.
        transactionType:
          type: string
          description: The type of transaction.
        category_id:
          type: integer
          format: int64
          description: The category associated with the transaction.
        comment:
          type: string
          description: Additional comment for the transaction.

    TransactionHistory:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the transaction history.
        transactionId:
          type: integer
          format: int64
          description: The transaction associated with the history.
        operationDate:
          type: string
          format: date-time
          description: The date and time of the operation.

    Transfer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the transfer.
        senderAccountId:
          type: integer
          format: int64
          description: The account ID of the sender.
        receiverAccountId:
          type: integer
          format: int64
          description: The account ID of the receiver.
        bankId:
          type: integer
          format: int64
          description: The bank associated with the transfer.
        amount:
          type: number
          format: float
          description: The amount of the transfer.
        reason:
          type: string
          description: The reason for the transfer.
        effectiveDate:
          type: string
          format: date-time
          description: The effective date of the transfer.
        status:
          type: string
          description: The status of the transfer.
        reference:
          type: string
          description: The reference of the transfer.

    InterestValid:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the valid interest.
        accountId:
          type: integer
          format: int64
          description: The account associated with the interest.
        amount:
          type: number
          format: float
          description: The amount of the interest.
        interestRate:
          type: number
          format: float
          description: The interest rate.
        interestDate:
          type: string
          format: date
          description: The date of the interest.

    HistoryInterest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the interest history.
        accountId:
          type: integer
          format: int64
          description: The account associated with the interest history.
        amount:
          type: number
          format: float
          description: The amount of the interest.
        interestRate:
          type: number
          format: float
          description: The interest rate.
        interestDate:
          type: string
          format: date
          description: The date of the interest.

    InterestNotValid:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the invalid interest.
        accountId:
          type: integer
          format: int64
          description: The account associated with the invalid interest.
        amount:
          type: number
          format: float
          description: The amount of the invalid interest.
        interestRate:
          type: number
          format: float
          description: The interest rate.
        interestDate:
          type: string
          format: date
          description: The date of the invalid interest.

    LoanValid:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "Unique identifier for the loan."
        accountId:
          type: integer
          format: int64
          description: "ID of the account associated with the loan."
        amount:
          type: number
          format: float
          description: "The amount of the loan."
        loansDate:
          type: string
          format: date
          description: "Date when the loan was issued."
        status:
          type: integer
          enum:
            - 0
            - 100
          description: "Status of the loan (0 for active, 100 for closed)."

    HistoryLoan:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "Unique identifier for the historical loan record."
        accountId:
          type: integer
          format: int64
          description: "ID of the account associated with the historical loan record."
        amount:
          type: number
          format: float
          description: "The amount of the loan."
        loansDate:
          type: string
          format: date
          description: "Date when the loan was issued."
        status:
          type: integer
          enum:
            - 0
            - 100
          description: "Status of the loan (0 for active, 100 for closed)."

    LoanNotValid:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "Unique identifier for the invalid loan."
        accountId:
          type: integer
          format: int64
          description: "ID of the account associated with the invalid loan."
        amount:
          type: number
          format: float
          description: "The amount of the invalid loan."
        loansDate:
          type: string
          format: date
          description: "Date when the invalid loan was issued."


  